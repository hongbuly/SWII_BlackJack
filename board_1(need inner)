from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QWidget
from PyQt5.QtWidgets import QLineEdit, QToolButton
from PyQt5.QtWidgets import QSizePolicy
from PyQt5.QtWidgets import QLayout, QGridLayout

from inner import *


class Button(QToolButton):
    def __init__(self, text, callback):
        super().__init__()
        self.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        self.setText(text)
        self.clicked.connect(callback)

    def sizeHint(self):
        size = super(Button, self).sizeHint()
        size.setHeight(size.height() + 50)
        size.setWidth(max(size.width(), size.height()))
        return size


class Board(QWidget):

    def __init__(self, parent=None):
        super().__init__(parent)
#화면 2개(딜러, 플레이어)
        self.display = QLineEdit()
        self.display.setReadOnly(True)
        self.display.setMaxLength(50)
        self.display1 = QLineEdit()
        self.display1.setReadOnly(True)
        self.display1.setMaxLength(50)


        button_layout = QGridLayout()
        start_button = Button("start", self.buttonClicked)
        push_button = Button("push", self.buttonClicked)
        end_button = Button("end", self.buttonClicked)
        button_layout.addWidget(start_button, 0, 1)
        button_layout.addWidget(push_button, 0, 2)
        button_layout.addWidget(end_button, 0, 3)

        main_layout = QGridLayout()
        main_layout.setSizeConstraint(QLayout.SetFixedSize)
        main_layout.addWidget(self.display1, 0, 0, 1, 2)
        main_layout.addWidget(self.display, 1, 0, 1, 2)
        main_layout.addLayout(button_layout, 2, 0)

        self.setLayout(main_layout)
        self.setWindowTitle("Black Jack")

    def buttonClicked(self):
        button = self.sender()
        key = button.text()
        if key == 'start':     
            #매 게임마다 카드 리셋후, 카드 지급, 내부와 외부 분리
            self.card = cardreset()

            self.player = twocard(self.card)
            self.dealer = twocard(self.card)

            # print Gui에서 안보임
            print('player')
            print(self.player)
            print('dealer')
            print(self.dealer)
            print(count(self.card)) #남아있는 카드 뭉치의 숫자합
            #화면에 딜러와 플레이어 카드 현황 
            self.display.setText('player:' + str(self.player))
            self.display1.setText('dealer:' + str(self.dealer))


        elif key == 'push':
            #카드를 받지 않은 상태에서 push버튼 클릭시 문구 추가, 내부와 외부 분리
            try:
                cardappend(self.player, self.card)
                self.display.setText('player:' + str(self.player))
                print(self.player)
                print(count(self.card))
            except:
                print('e')
                self.display.setText("카드를 받아주세요")

        elif key == 'end':
            #플레이어와 딜러 숫자합 비교, 내부와 외부 분리
            player_result = count(self.player)
            dealer_result = count(self.dealer)
            self.display.setText(fight(player_result, dealer_result))

            print(player_result, dealer_result)



if __name__ == '__main__':
    import sys

    app = QApplication(sys.argv)
    board = Board()
    board.show()
    sys.exit(app.exec_())
